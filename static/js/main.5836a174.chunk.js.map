{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/App.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChangeInput","target","value","setState","reset","handleSubmit","e","preventDefault","props","onAddContact","this","className","s","phonebBookForm","onSubmit","contactName","nameInput","type","onChange","autoComplete","contactNumber","numberInput","addButton","onClick","addContact","Component","ContactItem","deleteContact","contactItem","ContactList","contacts","onDelete","length","map","id","key","noDataMessage","Filter","onChangeFilter","filterText","filterInput","App","filter","changeFilter","newContact","uuidv4","find","contact","toLowerCase","alert","prevState","getFilteredTasks","includes","existedContacts","localStorage","getItem","JSON","parse","setItem","stringify","filteredContacts","wrapperPhonebook","phoneBookHeading","contactsHeading","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5836a174.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1kT-K\",\"contactItem\":\"ContactList_contactItem__2J4Vi\",\"contactName\":\"ContactList_contactName__3m5kk\",\"contactNumber\":\"ContactList_contactNumber__IMG61\",\"deleteContact\":\"ContactList_deleteContact__1HLSr\",\"noDataMessage\":\"ContactList_noDataMessage__1cYZf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebBookForm\":\"ContactForm_phonebBookForm__2pPSM\",\"contactName\":\"ContactForm_contactName__5pMPv\",\"contactNumber\":\"ContactForm_contactNumber__R1OJy ContactForm_contactName__5pMPv\",\"nameInput\":\"ContactForm_nameInput__2ACro\",\"numberInput\":\"ContactForm_numberInput__11HVx ContactForm_nameInput__2ACro\",\"addButton\":\"ContactForm_addButton__1pS1R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperPhonebook\":\"App_wrapperPhonebook__2PSV7\",\"phoneBookHeading\":\"App_phoneBookHeading__fssSu\",\"contactsHeading\":\"App_contactsHeading__1Ngop App_phoneBookHeading__fssSu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterText\":\"Filter_filterText__Nryby ContactForm_contactName__5pMPv\",\"filterInput\":\"Filter_filterInput__1iS5O ContactForm_nameInput__2ACro\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.number,\r\n  };\r\n\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleChangeInput = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  reset = () => {\r\n    return {\r\n      name: '',\r\n      number: '',\r\n    };\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n\r\n    this.setState(this.reset());\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <form className={s.phonebBookForm} onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <p className={s.contactName}>Name</p>\r\n            <input\r\n              className={s.nameInput}\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handleChangeInput}\r\n              name=\"name\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <label>\r\n            <p className={s.contactNumber}>Number</p>\r\n            <input\r\n              className={s.numberInput}\r\n              type=\"phone\"\r\n              value={number}\r\n              onChange={this.handleChangeInput}\r\n              name=\"number\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <button\r\n            className={s.addButton}\r\n            type=\"submit\"\r\n            onClick={this.addContact}\r\n          >\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactItem({ name, number, deleteContact }) {\r\n  return (\r\n    <>\r\n      <li className={s.contactItem}>\r\n        <p className={s.contactName}>{name}</p>\r\n        <p className={s.contactNumber}>{number}</p>\r\n        <button\r\n          className={s.deleteContact}\r\n          type=\"button\"\r\n          onClick={deleteContact}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ContactItem from './ContactItem';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <div>\r\n      {contacts.length > 0 && (\r\n        <ul className={s.contacts}>\r\n          {contacts.map(({ id, name, number }) => (\r\n            <ContactItem\r\n              key={id}\r\n              name={name}\r\n              number={number}\r\n              deleteContact={() => onDelete(id)}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {contacts.length === 0 && (\r\n        <p className={s.noDataMessage}>No data in contacts</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.objectOf(\r\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    ),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <p className={s.filterText}>Find contact by name</p>\r\n      <input\r\n        className={s.filterInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\n\r\nimport s from './App.module.css';\r\n\r\nexport default class App extends Component {\r\n  static propTypes = {\r\n    filter: PropTypes.string,\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.objectOf(\r\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n      ),\r\n    ),\r\n  };\r\n\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const existedContacts = localStorage.getItem('contacts');\r\n\r\n    if (existedContacts) {\r\n      this.setState({ contacts: JSON.parse(existedContacts) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter: filter.target.value });\r\n  };\r\n\r\n  addContact = (name, number) => {\r\n    const { contacts } = this.state;\r\n\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const isInContacts = contacts.find(contact => {\r\n      return contact.name.toLowerCase() === name.toLowerCase();\r\n    });\r\n\r\n    if (isInContacts) {\r\n      alert(`${name} is already in contacts.`);\r\n    } else if (number === '') {\r\n      alert(\"You don't wrote a nubmer.\");\r\n    } else {\r\n      this.setState(prevState => {\r\n        return {\r\n          contacts: [...prevState.contacts, newContact],\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  getFilteredTasks = () => {\r\n    const { filter, contacts } = this.state;\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(state => {\r\n      return {\r\n        contacts: state.contacts.filter(contact => contact.id !== id),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n\r\n    const filteredContacts = this.getFilteredTasks();\r\n\r\n    return (\r\n      <>\r\n        <div className={s.wrapperPhonebook}>\r\n          <h1 className={s.phoneBookHeading}>Phonebook</h1>\r\n          <ContactForm onAddContact={this.addContact} />\r\n          <h2 className={s.contactsHeading}>Contacts</h2>\r\n          {contacts.length > 0 && (\r\n            <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n          )}\r\n        </div>\r\n\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          onDelete={this.deleteContact}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './base.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}